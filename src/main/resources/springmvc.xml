<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/data/mongo  
	http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
    default-autowire="byName" default-lazy-init="true">
    
<!-- 	<context:property-placeholder location="classpath:mongo.properties"/> -->
	<!-- 配置自定扫描的包 -->
<!-- 	<context:component-scan base-package="action,dao,client"/> -->

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />
	
	<!--方式二、使用httpclient的实现，带连接池-->
    <bean id="pollingConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
        <!--整个连接池的并发-->
        <property name="maxTotal" value="1000" />
        <!--每个主机的并发-->
        <property name="defaultMaxPerRoute" value="1000" />
    </bean>

    <bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder" factory-method="create">
        <property name="connectionManager" ref="pollingConnectionManager" />
        <!--开启重试-->
        <property name="retryHandler">
            <bean class="org.apache.http.impl.client.DefaultHttpRequestRetryHandler">
                <constructor-arg value="2"/>
                <constructor-arg value="true"/>
            </bean>
        </property>
        <property name="defaultHeaders">
            <list>
                <bean class="org.apache.http.message.BasicHeader">
                    <constructor-arg value="User-Agent"/>
                    <constructor-arg value="Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.16 Safari/537.36"/>
                </bean>
                <bean class="org.apache.http.message.BasicHeader">
                    <constructor-arg value="Accept-Encoding"/>
                    <constructor-arg value="gzip,deflate"/>
                </bean>
                <bean class="org.apache.http.message.BasicHeader">
                    <constructor-arg value="Accept-Language"/>
                    <constructor-arg value="zh-CN"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="httpClient" factory-bean="httpClientBuilder" factory-method="build" />

    <bean id="clientHttpRequestFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
        <constructor-arg ref="httpClient"/>
        <!--连接超时时间，毫秒-->
        <property name="connectTimeout" value="5000"/>
        <!--读写超时时间，毫秒-->
        <property name="readTimeout" value="10000"/>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="clientHttpRequestFactory"/>
        <property name="errorHandler">
            <bean class="org.springframework.web.client.DefaultResponseErrorHandler"/>
        </property>
<!--         <property name="messageConverters"> -->
<!--             <list> -->
<!--                 <bean class="org.springframework.http.converter.FormHttpMessageConverter"/> -->
<!--                 <bean class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter"/> -->
<!--                 <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/> -->
<!--                 <bean class="org.springframework.http.converter.StringHttpMessageConverter"> -->
<!--                     <property name="supportedMediaTypes"> -->
<!--                         <list> -->
<!--                             <value>text/plain;charset=UTF-8</value> -->
<!--                         </list> -->
<!--                     </property> -->
<!--                 </bean> -->
<!--             </list> -->
<!--         </property> -->
    </bean>
	
<!-- 	<mongo:mongo-client host="${mongo.host}" port="${mongo.port}" id="mongoClient">     -->
<!--        <mongo:client-options connections-per-host="60" -->
<!-- 		threads-allowed-to-block-for-connection-multiplier="150" -->
<!-- 		connect-timeout="1000" max-wait-time="1500"  />     -->
<!--     </mongo:mongo-client>    -->

<!-- 	<mongo:db-factory id="mongoFactory" mongo-ref="mongoClient" -->
<!-- 		dbname="test" /> -->

<!-- 	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate"> -->
<!-- 		<constructor-arg name="mongoDbFactory" ref="mongoFactory" /> -->
<!-- 	</bean> -->

	<!-- 配置视图解析器: 如何把 handler 方法返回值解析为实际的物理视图 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/views/"></property> <property name="suffix" 
		value=".jsp"></property> </bean> -->
	<!-- 配置视图 BeanNameViewResolver 解析器: 使用视图的名字来解析视图 -->
	<!-- 通过 order 属性来定义视图解析器的优先级, order 值越小优先级越高 <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"> 
		<property name="order" value="100"></property> </bean> -->
	<!-- 配置国际化资源文件 <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basename" value="i18n"></property> </bean> -->
	<!-- 配置直接转发的页面 -->
	<!-- 可以直接相应转发的页面, 而无需再经过 Handler 的方法. <mvc:view-controller path="/success" 
		view-name="success" /> -->

	<!-- 在实际开发中通常都需配置 mvc:annotation-driven 标签 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<mvc:default-servlet-handler />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
</beans>
